name: Mi Workflow Completo

on: [push]

jobs:
  consultar_db:
    runs-on: ubuntu-latest
    services:
      personas_db: # Nombre del servicio de la base de datos
        image: mysql:latest # Imagen de MySQL (puedes cambiar la versión)
        env:
          DB_PASSWORD: ${{ secrets.PASSWORDPHPMYADMIN }} # Accediendo al secreto para la contraseña
          MYSQL_ROOT_PASSWORD: Aroman1984 # Contraseña root de MySQL
          MYSQL_DATABASE: personas_db # Nombre de la base de datos
        ports:
          - 3306:3306 # Mapeo de puertos
        options: --health-cmd="mysqladmin ping" --health-timeout=5s # Comando para verificar la salud del servicio

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Acción para descargar el código del repositorio

      - name: Esperar a la base de datos
        run: |
          echo "Esperando a que la base de datos esté lista..."
          sleep 15 # Esperar 15 segundos (puedes ajustar este valor)

          - name: Verificar estado del servicio MySQL
          run: |
            echo "Intentando ping al servicio MySQL..."
            timeout 60 bash -c 'until mysqladmin ping -h personas_db -u root -pAroman1984 --silent; do echo "."; sleep 2; done'
            echo "Servicio MySQL parece estar listo."
  
      - name: Conectar y ejecutar consulta MySQL
        run: |
          mysql -h personas_db -u root -pAroman1984 -D personas_db -e "SELECT * FROM personas;"

  saludo_personalizado:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Acción para descargar el código del repositorio

      - name: Ejecutar mi acción personalizada
        id: mi_accion
        uses: ./.github/actions/my_action # Ruta a tu acción personalizada
        with:
          my_input: "¡Saludos desde el workflow unificado!" # Input para tu acción
          my_input2: "Espero que funcione todo." # Otro input para tu acción

      - name: Mostrar salidas de la acción personalizada
        run: |
          echo "El saludo completo generado por la acción es: ${{ steps.mi_accion.outputs.saludo_completo }}"
          echo "El primer mensaje de la acción fue: ${{ steps.mi_accion.outputs.primer_mensaje }}"

  comandos_basicos:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Acción para descargar el código del repositorio

      - name: Ejecutar comandos básicos y mostrar secreto
        run: |
          echo "Hola Mundo desde comandos básicos"
          touch info.txt
          echo "Información importante >> info.txt"
          echo "Secreto (ejemplo): ${{ secrets.PASSWORDPHPMYADMIN }}" >> info.txt # Ejemplo de cómo usar un secreto
          cat info.txt

  ejecutar_script:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Acción para descargar el código del repositorio

      - name: Ejecutar script de Linux
        run: |
          echo "Ejecutando script de Linux..."
          chmod +x ./.github/script.sh # Dar permisos de ejecución al script
          ./.github/script.sh # Ejecutar el script

  configurar_entorno:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Acción para descargar el código del repositorio

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.4.0 # Configurar Node.js
        with:
          node-version: latest # Usar la última versión de Node.js

      - name: Mostrar versión de Node.js
        run: node --version

      - name: Setup PHP environment
        uses: shivammathur/setup-php@v2 # Configurar PHP
        with:
          php-version: '8.3' # Usar la versión 8.3 de PHP
          extensions: mbstring, xml, curl, zip, gd, mysqli, pdo_mysql, bcmath, soap, intl, redis # Extensiones de PHP
          coverage: none
          tools: composer:v2.1.3 # Instalar Composer versión 2.1.3

      - name: Mostrar versión de PHP y Composer
        run: |
          php -v
          composer --version
          